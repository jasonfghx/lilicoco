from flask import Flask, request, abort
from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

from yolo import YOLO 
from keras import backend as K

from linebot import (LineBotApi, WebhookHandler)
from linebot.exceptions import (InvalidSignatureError)
from linebot.models import (MessageEvent, TextMessage, TextSendMessage,)
from linebot.models import (MessageEvent, ImageMessage)

app = Flask(__name__)
#-------------------------------------------------------------------------
#token 
#-------------------------------------------------------------------------
line_bot_api = LineBotApi('+B0WOwTsXMzS3CVk83JKRWAVvSZ5sEmbyswaUU+qeFajjOUij2+kqi4FZKDgul5rdrv4EzpQZ5H8NbLfLmeueeY9pDAu/xaikNw9bb3tqh1BK4dk1aZazOqH+SE+kLqafThXFjvs67tHYqIklLdwqwdB04t89/1O/w1cDnyilFU=')
handler = WebhookHandler('b766c01d7e81590ecdc0519de0837ff8')

#-------------------------------------------------------------------------
#路由
#-------------------------------------------------------------------------
@app.route("/test", methods=['GET'])
def test():
    return 'OK'
@app.route("/callback", methods=['POST'])
def callback():
    # get X-Line-Signature header value
    signature = request.headers['X-Line-Signature']

    # get request body as text
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)

    # handle webhook body
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    
    return 'OK'
#-------------------------------------------------------------------------
#存接到的圖
#-------------------------------------------------------------------------
@handler.add(MessageEvent,message=ImageMessage)
def save_image_message(event):

    message_content = line_bot_api.get_message_content(event.message.id)
#-------------------------------------------------------------------------
#存圖
    with open("./"+event.message.id+".jpg", 'wb') as fd:
        for chunk in message_content.iter_content():
            fd.write(chunk)
#-------------------------------------------------------------------------
#取圖
#-------------------------------------------------------------------------
    photo =event.message.id+".jpg"
    image_1 = Image.open(photo)
#-------------------------------------------------------------------------
#預測
#-------------------------------------------------------------------------
    K.clear_session()#<-----之前不能連續傳圖是因為沒有這個
    y = YOLO(image = True)
    pre = y.detect_image(image_1)
    predi_photo= pre[0]
#-------------------------------------------------------------------------
#存圖(預測完的)
#-------------------------------------------------------------------------
    predi_photo.save(event.message.id+"_fileout.jpg")
#-------------------------------------------------------------------------
#回傳label
#-------------------------------------------------------------------------
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=str(pre[1])))    
#-------------------------------------------------------------------------
if __name__ == "__main__":
    app.run("0.0.0.0", 5000, debug=True)
    y.close_session()
